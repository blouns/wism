<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{6150D953-BF84-439D-8AFA-C885613A6BB9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>BranallyGames.Wism</RootNamespace>
    <AssemblyName>wism</AssemblyName>
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>..\packages\Newtonsoft.Json.12.0.1\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="AffiliationInfo.cs" />
    <Compile Include="Affiliation.cs" />
    <Compile Include="AttackingForceCombatModifier.cs" />
    <Compile Include="Army.cs" />
    <Compile Include="Pathing\DijkstraPathingStrategy.cs" />
    <Compile Include="Pathing\IPathingStrategy.cs" />
    <Compile Include="Pathing\PathNode.cs" />
    <Compile Include="WarStrategy.cs" />
    <Compile Include="DefendingForceCombatModifer.cs" />
    <Compile Include="Hero.cs" />
    <Compile Include="Log.cs" />
    <Compile Include="ModFactory.cs" />
    <Compile Include="MapBuilder.cs" />
    <Compile Include="MapObject.cs" />
    <Compile Include="Player.cs" />
    <Compile Include="Terrain.cs" />
    <Compile Include="TerrainInfo.cs" />
    <Compile Include="TerrainModifierInfo.cs" />
    <Compile Include="Tile.cs" />
    <Compile Include="Unit.cs" />
    <Compile Include="UnitInfo.cs" />
    <Compile Include="World.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="mod\Affiliation.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="mod\Terrain.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Include="mod\Unit.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <Content Include="World.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent>echo POSTBUILDSTEP for $(ProjectName)

echo Copying files from "$(TargetDir)*" to "$(SolutionDir)..\WISM\Assets\Scripts\Core"

if not exist "$(SolutionDir)..\WISM\Assets\Scripts\Core" mkdir "$(SolutionDir)..\WISM\Assets\Scripts\Core"
 
xcopy "$(TargetDir)*" "$(SolutionDir)..\WISM\Assets\Scripts\Core" /i /d /y /s
if errorlevel 1 goto BuildEventFailed

if errorlevel 1 goto BuildEventFailed 

REM Exit properly because the build will not fail 
REM unless the final step exits with an error code

goto BuildEventOK
:BuildEventFailed
echo POSTBUILDSTEP for $(ProjectName) FAILED
exit 1
:BuildEventOK
echo POSTBUILDSTEP for $(ProjectName) COMPLETED OK</PostBuildEvent>
  </PropertyGroup>
</Project>