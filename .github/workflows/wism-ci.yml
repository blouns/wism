name: WISM CI

on:
  push:
    branches:
      - '**'  # Build everything
    tags:
      - 'v*'  # Only publish builds on version tags

jobs:
  build-client:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Build WismClient
      run: dotnet build WismClient/WismClient.sln --configuration Release

    - name: Test WismClient
      run: dotnet test WismClient/WismClient.sln --configuration Release

  build-unity:
    runs-on: windows-latest
    needs: build-client

    steps:
    - uses: actions/checkout@v4
  
    - uses: actions/checkout@v4
      with:
            lfs: true
    - uses: actions/cache@v3
      with:
            path: ${{ matrix.projectPath }}/Library
            key: Library-${{ matrix.projectPath }}
            restore-keys: |
              Library-

    - uses: game-ci/unity-test-runner@v4
      env:
        UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
        UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      with:
        projectPath: ${{ matrix.projectPath }}
        testMode: ${{ matrix.testMode }}
        artifactsPath: ${{ matrix.testMode }}-artifacts
        githubToken: ${{ secrets.GITHUB_TOKEN }}
        checkName: ${{ matrix.testMode }} Test Results
        coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Test results for ${{ matrix.testMode }}
        path: ${{ steps.tests.outputs.artifactsPath }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Coverage results for ${{ matrix.testMode }}
        path: ${{ steps.tests.outputs.coveragePath }}
    - name: Upload build artifact
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: wism-windows-build
        path: WismUnity/Builds/Windows/
